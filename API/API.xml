<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="M:API.Controllers.AuthController.Login(Domain.DTO.LoginRequest)">
            <summary>
            Logs in a user with the provided credentials and returns a JWT token upon successful login.
            </summary>
            <param name="request">The user's login request containing username and password.</param>
            <returns>
            A 200 OK response containing a <see cref="T:Domain.DTO.TokenResponseDTO"/> if login is successful, 
            or a 400 Bad Request response if validation fails.
            </returns>
            <remarks>
            Example request:
            
            <code>
            POST /api/auth/login
            {
                "username": "testuser",
                "password": "Test@12345"
            }
            </code>
            
            - The API expects a username and password in the request body.
            - If the login is successful, a JWT token is returned.
            - If the username or password is incorrect, a validation exception is thrown.
            </remarks>
            <response code="200">
            Returns the JWT token in the form of a <see cref="T:Domain.DTO.TokenResponseDTO"/>.
            </response>
            <response code="400">
            Returns a validation error message if the username or password is invalid.
            </response>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
            Thrown if the user is not found or the password is incorrect.
            </exception>
        </member>
        <member name="M:API.Controllers.UserController.GetList(Domain.DTO.BaseSearch)">
             <summary>
             Retrieves a paginated list of users based on the provided search criteria.
             </summary>
             <param name="request">A search request containing pagination options and optional filters such as name, email, and mobile number.</param>
             <returns>
             A 200 OK response containing the paginated list of users if successful.
             </returns>
             <remarks>
             Example request:
             
             <code>
             POST /api/users/getlist
             {
                 "pageSize": 10,
                 "pageNumber": 1,
                 "name": "John",
                 "email": "john@example.com",
                 "mobileNumber": "1234567890"
             }
             </code>
            
             - The API allows searching for users by name, email, or mobile number.
             - The result is paginated based on the provided `PageSize` and `PageNumber`.
             </remarks>
             <response code="200">Returns the list of users based on the search criteria.</response>
             <response code="400">Returns a validation error if the search criteria are invalid.</response>
        </member>
        <member name="M:API.Controllers.UserController.UserRegistration(Domain.DTO.UserRegistrationRequest)">
             <summary>
             Registers a new user with the provided details and uploads an optional profile picture.
             </summary>
             <param name="request">The user's registration details, including name, email, mobile number, password, and an optional file (profile picture).</param>
             <returns>
             A 200 OK response if the user registration is successful.
             </returns>
             <remarks>
             Example request:
            <code>
             POST /api/auth/userregistration
             {
                 "name": "Jane Doe",
                 "email": "jane.doe@example.com",
                 "mobileNumber": "9876543210",
                 "password": "SecurePassword123",
                 "file": file (optional)
             }
            
             </code>
             - The API registers a new user and optionally uploads a profile picture.
             - If a file is uploaded, the API will generate a URL for the file and save it.
             </remarks>
             <response code="200">Returns a successful response upon user registration.</response>
             <response code="400">Returns a validation error if the registration data is invalid.</response>
        </member>
        <member name="M:API.Controllers.UserController.GetUser(System.Int64)">
             <summary>
             Retrieves detailed information about a specific user by their ID.
             </summary>
             <param name="UserId">The unique identifier of the user.</param>
             <returns>
             A 200 OK response containing the user details if the user exists.
             </returns>
             <remarks>
             Example request:
             
             <code>
             GET /api/users/1
            
             </code>
             - The API fetches the details of a user with the given UserId.
             </remarks>
             <response code="200">Returns the user details for the specified UserId.</response>
             <response code="400">Returns a validation error if the user is not found.</response>
        </member>
        <member name="M:API.Controllers.UserController.UploadExcel(Domain.DTO.Others.FileUploadRequest)">
             <summary>
             Uploads an Excel file and processes its content.
             </summary>
             <param name="request">A request containing the Excel file to be uploaded and processed.</param>
             <returns>
             A 200 OK response if the Excel file is processed successfully.
             </returns>
             <remarks>
             Example request:
            
             <code>
             POST /api/excel/upload
             {
                 "excelFile": file
             }
            
             </code>
             - The API processes the uploaded Excel file, typically for bulk user import or other data processing purposes.
             </remarks>
             <response code="200">Returns a successful response if the file is processed successfully.</response>
             <response code="400">Returns a validation error if the file is not valid or processing fails.</response>
        </member>
    </members>
</doc>
